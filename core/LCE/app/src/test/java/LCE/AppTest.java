/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package LCE;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

import java.io.File;
import java.io.FileWriter;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Properties;

class AppTest {
    @Test
    void testLCS() {
        int[] target = new int[] { 1, 3, 5, 1, 6 };
        int[] tester = new int[] { 1, 5, 3, 1, 4 };
        LCS lcs = new LCS();
        assertArrayEquals(new int[] { 1, 3, 1 }, lcs.longestCommonSubsequenceOfIntegerArray(target, tester));
    }

    @Test
    void testPreprocess() {
        // Arrange
        App app = new App();
        List<String> inputList = Arrays.asList("1,John,Doe,30,Male", "2,Jane,Smith,25,Female");

        // Act
        List<String[]> result = app.commaSeperatedLineToStringArray(inputList);

        // Assert
        assertEquals(2, result.size());

        assertArrayEquals(new String[] { "1", "John", "Doe", "30", "Male" }, result.get(0));
        assertArrayEquals(new String[] { "2", "Jane", "Smith", "25", "Female" }, result.get(1));
    }

    @Test
    void testLoadProperties() {
        // Arrange
        App app = new App();
        String testFilePath = "test.properties";

        // Create a temporary properties file for testing
        try (FileWriter fileWriter = new FileWriter(testFilePath)) {
            fileWriter.write("key1=value1\nkey2=value2");
        } catch (Exception e) {
            fail("Failed to create a test properties file.");
        }

        // Act
        Properties loadedProperties = app.loadProperties(testFilePath);

        // Assert
        assertNotNull(loadedProperties, "Loaded properties should not be null.");
        assertEquals("value1", loadedProperties.getProperty("key1"), "Incorrect value for key1");
        assertEquals("value2", loadedProperties.getProperty("key2"), "Incorrect value for key2");

        // Clean up - delete the temporary properties file
        File testFile = new File(testFilePath);
        if (!testFile.delete()) {
            System.out.println("Warning: Test properties file deletion failed.");
        }
    }


    @Test
    void testGitCloneUsingThread() {
        HashMap<String, String> gitURLList = new HashMap<>();
        gitURLList.put("repo1", "https://github.com/apache/beam.git");
        gitURLList.put("repo2", "https://github.com/apache/hadoop");
        gitURLList.put("repo3", "https://github.com/apache/cassandra");
        gitURLList.put("repo4", "https://github.com/apache/spark");
        // Add more repositories as needed

        String resultDir = "/data2/sechang/TestRepo";

        App app = new App(); // Assuming the class containing gitCloneUsingThread is named GitCloner

        boolean result = app.gitCloneUsingThread(gitURLList, resultDir);

        assertTrue(result, "Git clone operation should be successful");

        // Add more assertions or checks based on your requirements
    }


}
